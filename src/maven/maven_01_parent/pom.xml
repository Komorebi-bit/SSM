<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- SNAPSHOT快照版本  RELEASE发布版本 -->
    <groupId>com.ko.maven</groupId>
    <artifactId>maven_01_parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!-- 聚合工程，一个空工程，负责管理多个模块 -->
    <!-- 打包类型设为pom -->
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- 定义属性 -->
        <spring.version>5.3.23</spring.version>
        <mybatis.version>3.5.6</mybatis.version>
        <mybatis-spring.version>1.3.0</mybatis-spring.version>
        <mysql-connector-java.version>8.0.27</mysql-connector-java.version>
        <druid.version>1.1.16</druid.version>
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
        <jackson-databind.version>2.9.0</jackson-databind.version>
        <junit.version>4.12</junit.version>

        <jdbc.driver>com.mysql.cj.jdbc.Driver</jdbc.driver>
        <!-- <jdbc.url>jdbc:mysql://127.0.0.1:3306/ssm_db?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true</jdbc.url> -->
        <jdbc.username>root</jdbc.username>
        <jdbc.password>10086</jdbc.password>

    </properties>


    <!-- 设置管理的模块名称 -->
    <modules>
        <module>../maven_02_ssm</module>
        <module>../maven_03_pojo</module>
        <module>../maven_04_dao</module>
    </modules>


    <dependencies>


        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis-spring.version}</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>


    </dependencies>


    <!-- 定义依赖管理 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- mvn install -P env_test 可以通过这个指令选择开发环境，执行指令 -->
    <profiles>
        <!-- 开发环境 -->
        <profile>
            <id>env_dep</id>
            <properties>
                <jdbc.url>jdbc:mysql://127.0.0.1:3306/ssm_db?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true</jdbc.url>
            </properties>
            <!-- 设定是否为默认启动环境 -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 生产环境 -->
        <profile>
            <id>env_pro</id>
            <properties>
                <jdbc.url>jdbc:mysql://127.0.0.2:3306/ssm_db?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true</jdbc.url>
            </properties>
        </profile>
        <!-- 测试环境 -->
        <profile>
            <id>env_test</id>
            <properties>
                <jdbc.url>jdbc:mysql://127.0.0.3:3306/ssm_db?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true</jdbc.url>
            </properties>
        </profile>
    </profiles>

    <build>
        <resources>
            <!-- 指定的文件可以解析${} -->
            <resource>
                <!-- ${project.basedir} 内置系统属性 代表当前项目所在的目录 -->
                <!-- 查看内置属性 在bin目录下，启动cmd 输入mvn help:system 查看 -->
                <directory>${project.basedir}/src/main/resources</directory>
                <!-- 开启过滤规则 使之能够识别${}符号 -->
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!-- mvn package -D skipTests  命令跳过测试 -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12.4</version>
                <!-- 跳过测试 -->
                <configuration>
                    <skipTests>false</skipTests>
                    <!-- 排除掉不参与测试的内容 -->
                    <excludes>
                        <exclude>**/BookServiceTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- 配置当前工程保存在私服中的具体位置 -->
    <distributionManagement>
        <repository>
            <id>ko-release</id>
            <url>http://localhost:8081/repository/ko-release/</url>
        </repository>
        <snapshotRepository>
            <id>ko-snapshot</id>
            <url>http://localhost:8081/repository/ko-snapshot/</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- 临时配置远程仓库 -->
    <repositories>
        <!-- 第一推荐 默认这个-->
        <!-- <repository>
          <id>alimaven</id>
          <name>aliyun maven</name>
          <url>https://maven.aliyun.com/nexus/content/groups/public/</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository> -->
        <!-- maven.apache.org 中央仓库 -->
        <!-- <repository>
          <id>central-repos</id>
          <name>Central Repository</name>
          <url>https://repo.maven.apache.org/maven2</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository> -->

        <!-- maven.org 中央仓库 -->
        <!-- <repository>
          <id>central-repos1</id>
          <name>Central Repository 2</name>
          <url>https://repo1.maven.org/maven2/</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository> -->
        <!-- <repository>
          <id>central-repos1</id>
          <name>Central Repository 2</name>
          <url>https://mvnrepository.com/</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository> -->

        <!-- camunda.com 中央仓库（第2推荐使用） -->
        <!-- <repository>
          <id>activiti-repos2</id>
          <name>Activiti Repository 2</name>
          <url>https://app.camunda.com/nexus/content/groups/public</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository> -->

        <!-- alfresco.com 中央仓库（第3推荐使用） -->
        <!-- <repository>
          <id>activiti-repos</id>
          <name>Activiti Repository</name>
          <url>https://maven.alfresco.com/nexus/content/groups/public</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository> -->
    </repositories>

    <!-- 临时修改maven jdk版本 -->
    <!-- aot -->
    <!-- <profiles> -->
        <!-- <profile>
          <id>jdk‐1.8</id>
          <activation>
            <activeByDefault>true</activeByDefault>
            <jdk>1.8</jdk>
          </activation>
          <properties>
            <maven.compiler.source>1.8</maven.compiler.source>
            <maven.compiler.target>1.8</maven.compiler.target>
            <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
          </properties>
          <repositories>
            <repository>
              <id>sonatype-nexus-snapshots</id>
              <url>https://oss.sonatype.org/content/repositories/snapshots</url>
              <releases>
                <enabled>false</enabled>
              </releases>
              <snapshots>
                <enabled>true</enabled>
              </snapshots>
            </repository>
          </repositories>
        </profile> -->

        <!-- <profile>
          <id>native</id>
          <build>
            <plugins>
              <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                  <image>
                    <builder>paketobuildpacks/builder:tiny</builder>
                    <env>
                      <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
                    </env>
                  </image>
                </configuration>
                <executions>
                  <execution>
                    <id>process-aot</id>
                    <goals>
                      <goal>process-aot</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>
            </plugins>
          </build>
        </profile> -->
    <!-- </profiles> -->
</project>